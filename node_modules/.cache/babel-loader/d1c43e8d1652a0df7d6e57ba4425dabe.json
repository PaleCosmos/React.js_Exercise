{"ast":null,"code":"var _jsxFileName = \"/Users/palecosmos/Documents/GitHub/React.js_Exercise/src/Movie.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LinesEllipsis from 'react-lines-ellipsis';\nimport './Movie.css';\n\nfunction Movie({\n  title,\n  poster,\n  genres,\n  synopsis\n}) {\n  var size = 0;\n  genres.map((genre, index) => {\n    size = size + 1;\n  });\n  return React.createElement(\"div\", {\n    className: \"Movie\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Movie__Column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(MoviePoster, {\n    poster: poster,\n    alt: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"Movie__Column\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    className: \"Movie__Genres\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, genres.map((genre, index) => React.createElement(MovieGenre, {\n    genre: genre,\n    key: index,\n    isLast: size,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }))), React.createElement(\"div\", {\n    className: \"Movie__Synopsis\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(LinesEllipsis, {\n    text: synopsis,\n    maxLine: \"3\",\n    ellipsis: \"...\",\n    trimRight: true,\n    basedOn: \"letters\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }))));\n}\n\nfunction MoviePoster({\n  poster,\n  alt\n}) {\n  return React.createElement(\"img\", {\n    src: poster,\n    alt: alt,\n    title: alt,\n    className: \"Movie__Poster\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  });\n}\n\nfunction MovieGenre({\n  genre,\n  key,\n  isLast\n}) {\n  if (key !== isLast - 1) return React.createElement(\"span\", {\n    className: \"Movie__Genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, genre, \", \");else return React.createElement(\"span\", {\n    className: \"Movie__Genre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, genre);\n}\n\nMovie.propTypes = {\n  title: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.array.isRequired,\n  synopsis: PropTypes.string.isRequired\n};\nMoviePoster.propTypes = {\n  poster: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired\n};\nMovieGenre.propTypes = {\n  genre: PropTypes.string.isRequired,\n  ind: PropTypes.number.isRequired,\n  isLast: PropTypes.number.isRequired\n};\nexport default Movie;","map":{"version":3,"sources":["/Users/palecosmos/Documents/GitHub/React.js_Exercise/src/Movie.js"],"names":["React","PropTypes","LinesEllipsis","Movie","title","poster","genres","synopsis","size","map","genre","index","MoviePoster","alt","MovieGenre","key","isLast","propTypes","string","isRequired","array","ind","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport LinesEllipsis from 'react-lines-ellipsis'\nimport './Movie.css';\n\nfunction Movie({title, poster, genres, synopsis}){\nvar size = 0;\ngenres.map((genre, index)=> {\n  size = size + 1;\n})\n\n    return (\n        <div className=\"Movie\">\n            <div className=\"Movie__Column\">\n                <MoviePoster poster={poster} alt={title} />\n            </div>   \n            <div className=\"Movie__Column\">\n                <h1>{title}</h1>\n                <div className=\"Movie__Genres\">\n                    {genres.map((genre, index) =>\n                       <MovieGenre genre={genre} key={index} isLast = {size}/>)}\n                </div>\n                <div className=\"Movie__Synopsis\">\n                <LinesEllipsis\n                    text={synopsis}\n                    maxLine='3'\n                    ellipsis='...'\n                    trimRight\n                    basedOn='letters'\n                    />   \n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction MoviePoster({poster, alt}){\n    return (\n        <img src={poster} alt={alt} title={alt} className=\"Movie__Poster\" />\n    )\n}\n\nfunction MovieGenre({genre, key, isLast}){\n  if(key !== isLast - 1)\n    return (\n        <span className=\"Movie__Genre\">{genre}, </span>\n    )\n  else\n  return (\n    <span className=\"Movie__Genre\">{genre}</span>\n)\n}\n\nMovie.propTypes = {\n    title: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.array.isRequired,\n    synopsis: PropTypes.string.isRequired\n}\n\nMoviePoster.propTypes = {\n    poster: PropTypes.string.isRequired,\n    alt: PropTypes.string.isRequired\n}\n\nMovieGenre.propTypes ={\n    genre: PropTypes.string.isRequired,\n    ind : PropTypes.number.isRequired,\n    isLast : PropTypes.number.isRequired\n}\n\nexport default Movie"]},"metadata":{},"sourceType":"module"}